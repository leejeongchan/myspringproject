<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeongchan.mapper.AdminMapper">
	<select id="category"
		resultType="com.jeongchan.domain.CategoryVO">
		select level,cateName,cateCode,cateCodeRef from
		jeongchan_category
		start with cateCodeRef is null connect by prior
		cateCode = cateCodeRef
	</select>

	<insert id="register">
		insert into jeongchan_goods (gdsNum, gdsName,
		cateCode, gdsPrice, gdsStock, gdsDes,gdsImg,gdsThumbImg)
		values
		(jeongchan_goods_seq.nextval, #{gdsName}, #{cateCode}, #{gdsPrice},
		#{gdsStock}, #{gdsDes}, #{gdsImg},#{gdsThumbImg})
	</insert>

	<select id="goodsList"
		resultType="com.jeongchan.domain.GoodsViewVO">
		select g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef,
		c.cateName, gdsPrice,
		gdsStock,gdsDes,gdsImg,gdsDate,g.gdsImg,g.gdsThumbImg
		from
		jeongchan_goods g inner join jeongchan_category c
		on g.cateCode =
		c.cateCode order by g.gdsNum desc
	</select>

	<select id="goodsView"
		resultType="com.jeongchan.domain.GoodsViewVO">
		select g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef,
		c.cateName, gdsPrice,
		gdsStock,gdsDes,gdsImg,gdsDate,g.gdsImg,g.gdsThumbImg
		from
		jeongchan_goods g inner join jeongchan_category c
		on g.cateCode =
		c.cateCode
		where g.gdsNum = #{gdsNum}

	</select>

	<update id="goodsModify">
		update jeongchan_goods
		set gdsName
		=#{gdsName},cateCode=#{cateCode},gdsPrice=#{gdsPrice},gdsStock=#{gdsStock},gdsDes=#{gdsDes},gdsImg=#{gdsImg},gdsThumbImg=#{gdsThumbImg}
		where gdsNum=#{gdsNum}
	</update>

	<delete id="goodsDelete">
		delete jeongchan_goods
		where gdsNum = #{gdsNum}
	</delete>

	<!-- 모든 유저의 주문 목록 -->
	<select id="orderList" resultType="com.jeongchan.domain.OrderVO">
		select
		orderId, userId,
		orderRec,
		userAddr1, userAddr2, userAddr3,
		orderPhon, amount, orderDate,
		delivery
		from jeongchan_order
	</select>

	<!-- 특정 주문 목록 -->
	<select id="orderView"
		resultType="com.jeongchan.domain.OrderListVO">
		select distinct
		o.orderId, o.userId, o.orderRec,
		o.userAddr1, o.userAddr2, o.userAddr3,
		o.orderPhon, o.amount,
		o.orderDate, o.delivery,
		d.gdsNum, d.cartStock,
		g.gdsName,
		g.gdsThumbImg, g.gdsPrice
		from jeongchan_order o
		inner join
		order_details d
		on o.orderId = d.orderId
		inner join jeongchan_goods g
		on
		d.gdsNum = g.gdsNum
		where o.orderId = #{orderId}
	</select>

	<!-- 배송 상태 -->
	<update id="delivery">
		update jeongchan_order
		set delivery = #{delivery}
		where orderId = #{orderId}

	</update>

	<!-- 상품 수량 조절 -->
	<update id="changeStock">
		update jeongchan_goods
		set gdsStock = gdsStock -
		#{gdsStock}
		where gdsNum = #{gdsNum}
	</update>


	<select id="ChangeStock_sub"
		resultType="com.jeongchan.domain.OrderDetailVO">

		select orderId, gdsNum, cartStock
		from order_details
		where orderId =
		#{orderId}

	</select>
	<!-- 모든 소감 불러들이기 -->
	<select id="allReply"
		resultType="com.jeongchan.domain.GoodsReplyListVO">
		select
		r.gdsNum, r.userId, r.repNum, r.repCon, r.repDate,
		m.user_name
		from goods_reply r
		inner join jeongchan_user m
		on r.userId = m.user_id
	</select>
	<!-- 소감 삭제 -->
	<delete id="deleteReply">
		delete goods_reply where repNum = #{repNum}
	</delete>
</mapper>